{"version":3,"sources":["background.jpg","GlobalStyle.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/styled.js","App/Form/index.js","App/Form/useRatesData.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentDate.js","App/styled.js","App/index.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","background","Wrapper","styled","p","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","StyledForm","form","Header","h1","Content","span","Input","input","Footer","Button","button","Loading","Failure","Form","useState","setResult","ratesData","state","setRatesData","useEffect","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","date","useRatesData","setCurrency","amount","setAmount","onSubmit","event","preventDefault","rate","calculateResult","value","onChange","target","placeholder","type","required","step","as","Object","keys","map","div","formatDate","toLocaleString","weekday","hour","minute","second","day","month","Clock","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf91faf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.d44e6d7e.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n    font-family: 'Open Sans', sans-serif;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    min-height: 100vh;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    color: teal;\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nexport const Result = ({result}) => (\r\n    <Wrapper>\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form``;\r\n\r\nexport const Header = styled.h1`\r\n    color: teal;\r\n    text-align: center;\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    width:100%;\r\n    max-width: 350px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Footer = styled.p`\r\n    font-size: 14px;\r\n    text-align: center;\r\n    color: #555;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: teal;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n    }\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n    padding-top: 30px;\r\n    color: teal;\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n    padding-top: 30px;\r\n    color: crimson;\r\n`;","import { useState } from \"react\";\r\nimport { Result } from \"./Result\";\r\nimport { StyledForm, Header, Content, Input, Footer, Button, Loading, Failure } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\"\r\n\r\nexport const Form = () => {\r\n    const [result, setResult] = useState();\r\n    const ratesData = useRatesData();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = ratesData.rates[currency];\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount * rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const [currency, setCurrency] = useState(\"EUR\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <StyledForm onSubmit={onSubmit}>\r\n            <Header>Przelicznik walut</Header>\r\n            {ratesData.state === \"loading\"\r\n                ? (\r\n                    <Loading>\r\n                        Ładuję kursy z Europejskiego Banku Centralnego...\r\n                    </Loading>\r\n                )\r\n                : (ratesData.state === \"error\"\r\n                    ? (\r\n                        <Failure>\r\n                            Coś poszło nie tak... Sprawdź czy masz połączenie z internetem.\r\n                        </Failure>\r\n                    ) : (\r\n                        <>\r\n                            <p>\r\n                                <label>\r\n                                    <Content>Kwota w zł*:</Content>\r\n                                    <Input\r\n                                        value={amount}\r\n                                        onChange={({ target }) => setAmount(target.value)}\r\n                                        placeholder=\"Wpisz kwotę w zł\"\r\n                                        type=\"number\"\r\n                                        required\r\n                                        step=\"0.01\"\r\n                                    />\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <label>\r\n                                    <Content>Waluta:</Content>\r\n                                    <Input\r\n                                        as=\"select\"\r\n                                        value={currency}\r\n                                        onChange={({ target }) => setCurrency(target.value)}\r\n                                    >\r\n                                        {Object.keys(ratesData.rates).map(((currency) => (\r\n                                            <option\r\n                                                key={currency}\r\n                                                value={currency}\r\n                                            >\r\n                                                {currency}\r\n                                            </option>\r\n                                        )))}\r\n                                    </Input>\r\n                                </label>\r\n                            </p>\r\n                            <p>\r\n                                <Button>Przelicz!</Button>\r\n                            </p>\r\n\r\n                            <Footer>\r\n                                Kursy pobierane są z Europejskiego Banku Centralnego.\r\n                                Pobrane dnia: <strong>{ratesData.date}</strong>\r\n                            </Footer>\r\n\r\n                            <Result result={result} />\r\n                        </>\r\n                    )\r\n                )}\r\n        </StyledForm>\r\n    );\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const [ratesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchRates = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangerate.host/latest?base=PLN\");\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n\r\n                const { rates, date } = await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            }\r\n        };\r\n\r\n        setTimeout(fetchRates, 1000);\r\n    }, []);\r\n\r\n    return ratesData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: #777;\r\n`;","import { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    )\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-basis:700px;\r\n    margin:20px;\r\n    padding:40px;\r\n    background: #fff;\r\n    border-radius: 20px;\r\n    box-shadow: 0 0 30px #000;\r\n`;","import { Form } from './Form';\r\nimport { Clock } from './Clock';\r\nimport { Wrapper } from \"./styled\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrapper>\r\n      <Clock />\r\n      <Form />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GlobalStyle } from './GlobalStyle';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <GlobalStyle />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}