{"version":3,"sources":["App/currencies.js","App/Form/Result/styled.js","App/Form/Result/index.js","App/Form/styled.js","App/Form/index.js","App/Clock/styled.js","App/Clock/index.js","App/styled.js","App/index.js","reportWebVitals.js","index.js"],"names":["currencies","short","name","rate","Wrapper","styled","p","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","StyledForm","form","Header","h1","Content","span","Input","input","Footer","Button","button","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","as","map","div","formatDate","date","toLocaleString","weekday","hour","minute","second","day","month","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35a401d5.chunk.js","sourcesContent":["export const currencies = [\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.7798,\r\n    },\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.4991,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt Brytyjski\",\r\n        rate: 5.2314,\r\n    },\r\n];","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    color: teal;\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nexport const Result = ({result}) => (\r\n    <Wrapper>\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form``;\r\n\r\nexport const Header = styled.h1`\r\n    color: teal;\r\n    text-align: center;\r\n`;\r\n\r\nexport const Content = styled.span`\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    width:100%;\r\n    max-width: 350px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Footer = styled.p`\r\n    font-size: 14px;\r\n    text-align: center;\r\n    color: #555;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: teal;\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\nimport { StyledForm, Header, Content, Input, Footer, Button } from \"./styled\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <StyledForm onSubmit={onSubmit}>\r\n            <Header>Przelicznik walut</Header>\r\n            <p>\r\n                <label>\r\n                    <Content>Kwota w zł*:</Content>\r\n                    <Input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        placeholder=\"Wpisz kwotę w zł\"\r\n                        type=\"number\"\r\n                        required\r\n                        step=\"0.01\"\r\n                    />\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <label>\r\n                    <Content>Waluta:</Content>\r\n                    <Input\r\n                        as=\"select\"\r\n                        value={currency}\r\n                        onChange={({ target }) => setCurrency(target.value)}\r\n                    >\r\n                        {currencies.map((currency => (\r\n                            <option\r\n                                key={currency.short}\r\n                                value={currency.short}\r\n                            >\r\n                                {currency.name}\r\n                            </option>\r\n                        )))}\r\n                    </Input>\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <Button>Przelicz!</Button>\r\n            </p>\r\n\r\n            <Footer>\r\n                Kursy pochodzą ze strony www.internetowykantor.pl z dnia 30.06.2021\r\n            </Footer>\r\n\r\n            <Result result={result} />\r\n        </StyledForm>\r\n    )\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: #777;\r\n`;","import { useEffect, useState } from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    )\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    flex-basis:700px;\r\n    margin:20px;\r\n    padding:40px;\r\n    background: #fff;\r\n    border-radius: 20px;\r\n    box-shadow: 0 0 30px #000;\r\n`;","import { Form } from './Form';\r\nimport { currencies } from './currencies';\r\nimport { Clock } from './Clock';\r\nimport { useState } from 'react';\r\nimport { Wrapper } from \"./styled\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies\r\n      .find(({ short }) => short === currency)\r\n      .rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Clock />\r\n      <Form\r\n        result={result}\r\n        calculateResult={calculateResult}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}